name: Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: "${{ matrix.os }}-latest"
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu]
        java: [11]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          # Running setup-java again overwrites the settings.xml
          distribution: "temurin"
          java-version: ${{ matrix.java }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Display JDK version
        run: |
          java -version

      - name: Build application
        run: |
          ./gradlew assemble

      - name: Build final shadow jar
        run: |
          ./gradlew shadowJar

      - name: Run tests application
        run: |
          ./gradlew test --info

  build_server:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # extract metadata for labels https://github.com/crazy-max/ghaction-docker-meta
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v5
        with:
          images: quay.io/joelvaneenwyk/wire-app-backup-tool

        # setup docker actions https://github.com/docker/build-push-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true

  jar_release:
    needs: build_server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          # Running setup-java again overwrites the settings.xml
          distribution: "temurin"
          java-version: 11

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # Builds application
      - name: Build application
        run: |
          ./gradlew shadowJar

      # Creates release zip
      - name: Create release zip
        run: |
          cp build/libs/backup-export.jar .
          zip -r backup-export.zip backup-export.jar libs README.md

      # Obtains release URL to upload assets
      - name: Get Release Id
        id: get_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: bruceadams/get-release@v1.2.0

      # Upload ganymede zip to the releases
      - name: Upload Ganymede Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: backup-export.zip
          asset_name: backup-export.zip
          asset_content_type: application/zip
