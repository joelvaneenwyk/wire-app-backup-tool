name: Release Pipeline

on:
  release:
    types: [ published ]

jobs:
  docker_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: quay.io/wire/backup-export-tool

        # setup docker actions https://github.com/docker/build-push-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          # push only if this is indeed a tagged release
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Backups Exports Docker Release Pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_RELEASE }}
        # Notify every release
        if: always()

  jar_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # sets up jdk
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 8

      # Builds application
      - name: Build application
        run: |
          ./gradlew shadowJar

      # Creates release zip
      - name: Create release zip
        run: |
          cp build/libs/backup-export.jar .
          zip -r backup-export.zip backup-export.jar libs README.md

      # Upload ganymede zip to the releases
      - name: Upload Ganymede Release
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            backup-export.zip

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Backups Exports JAR Release Pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_RELEASE }}
        # Notify every release
        if: always()
